{"version":3,"sources":["Contact.jsx","navbar.jsx","Home.jsx","App.js","serviceWorker.js","index.js"],"names":["Contact","react_default","a","createElement","className","class","id","action","method","placeholder","type","tabindex","required","autofocus","name","data-submit","Component","NavBar","href","Home","src","alt","App","BrowserRouter","navbar","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.35beda31.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './contact.css'\r\nclass Contact extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n  <div class=\"container\">  \r\n  <form id=\"contact\" action=\"\" method=\"post\">\r\n    <h3>Quick Contact</h3>\r\n    <h4>Contact us today, and get reply with in 24 hours!</h4>\r\n    <fieldset>\r\n      <input placeholder=\"Your name\" type=\"text\" tabindex=\"1\" required autofocus/>\r\n    </fieldset>\r\n    <fieldset>\r\n      <input placeholder=\"Your Email Address\" type=\"email\" tabindex=\"2\" required/>\r\n    </fieldset>\r\n    <fieldset>\r\n      <input placeholder=\"Your Phone Number\" type=\"tel\" tabindex=\"3\" required/>\r\n    </fieldset>\r\n    <fieldset>\r\n      <input placeholder=\"Your Web Site starts with http://\" type=\"url\" tabindex=\"4\" required/>\r\n    </fieldset>\r\n    <fieldset>\r\n      <textarea placeholder=\"Type your Message Here....\" tabindex=\"5\" required></textarea>\r\n    </fieldset>\r\n    <fieldset>\r\n      <button name=\"submit\" type=\"submit\" id=\"contact-submit\" data-submit=\"...Sending\">Submit</button>\r\n    </fieldset>\r\n  </form>\r\n \r\n  \r\n</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contact;\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport './nav-menu.css';\r\n\r\nclass NavBar extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n      \r\n      <ul className='menu'>\r\n          <li  ><a className=\"dropbtn active\" href=\"/\">Home</a></li>\r\n\r\n          <div className='dropdown'>\r\n          <li className=\"itmes \"><a className=\"dropbtn\" href=\"/services\">Services</a>\r\n          <ul className='dropdown-content'>\r\n          <li><a href=\"/Entrepreneurs\">For Entrepreneurs</a></li>\r\n          <li><a href=\"/Students\">For Students</a></li>\r\n          <li><a href=\"/Hobbyists\">For Hobbyists</a></li>\r\n          </ul>\r\n          </li>\r\n          </div>\r\n          <li><a className=\"dropbtn\" href=\"/Contact\">Contact</a></li>\r\n      </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;","import React, { Component } from 'react';\r\nimport './Home.css';\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"home\">\r\n      <img className=\"img\" src='https://images.pexels.com/photos/1401796/pexels-photo-1401796.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260' alt='Home'/>\r\n      <div className='info'>\r\n      <h1 className=\"h1\">This App Was Created by H3xor Team</h1>\r\n      <h2 className=\"h2\">NavBar , React Rooter ,Pages: Home ; Contact</h2>\r\n      </div></div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\nimport {BrowserRouter , Route} from 'react-router-dom'\nimport Contact from './Contact'\nimport './App.css';\nimport NavBar from './navbar'\nimport Home from './Home'\n\nclass App extends Component {\n  render() {\n    return (\n    <BrowserRouter>\n        <div className=\"App\">\n      <NavBar/>\n      <Route exact path=\"/\" component={Home}/>\n      <Route exact path=\"/Contact\" component={Contact}/>\n      \n      </div>\n    </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}